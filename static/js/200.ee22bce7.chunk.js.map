{"version":3,"file":"static/js/200.ee22bce7.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/contactform/contactform.module.css?100c","components/contactform/ContactForm.jsx","webpack://react-homework-template/./src/components/filter/filter.module.css?56b3","components/filter/Filter.jsx","webpack://react-homework-template/./src/components/editwindow/editwindow.module.css?d168","components/editwindow/EditWindow.jsx","webpack://react-homework-template/./src/components/contactlist/contactlist.module.css?44d9","components/contactlist/ContactList.jsx","webpack://react-homework-template/./src/pages/Contacts/contacts.module.css?eff6","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectEditStatus = state => state.edit.status;\n\nexport const selectIdToEdit = state => state.edit.idToEdit;\n\nexport const selectNameToEdit = state => state.edit.nameToEdit;\n\nexport const selectNumberToEdit = state => state.edit.numberToEdit;\n\nexport const selectShowContactForm = state => state.showContactForm;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"modalContainer\":\"contactform_modalContainer__yvNNR\",\"contactForm\":\"contactform_contactForm__xR8rX\",\"formLabel\":\"contactform_formLabel__zY7ti\",\"formInput\":\"contactform_formInput__vRCgK\",\"formButton\":\"contactform_formButton__MR-Xo\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectShowContactForm,\n} from 'redux/contacts/selectors';\nimport { setShowContactForm } from 'redux/contacts/showContactFormSlice';\nimport { Notify } from 'notiflix';\nimport css from './contactform.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const showContactsForm = useSelector(selectShowContactForm);\n  const bodyEl = document.querySelector('body');\n  bodyEl.style.overflow = 'hidden';\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const addContactForm = e.currentTarget;\n    const name = addContactForm.elements.name.value;\n    const number = addContactForm.elements.number.value;\n\n    const newContact = { name, number };\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n      )\n    ) {\n      addContactForm.reset();\n      return Notify.info(\n        `${newContact.name} is already in contacts! You can edit it.`\n      );\n    }\n\n    dispatch(addContact(newContact));\n    dispatch(setShowContactForm(!showContactsForm));\n    bodyEl.style.overflow = 'auto';\n  };\n\n  const cancelForm = () => {\n    dispatch(setShowContactForm(!showContactsForm));\n    bodyEl.style.overflow = 'auto';\n  };\n\n  return (\n    <div className={css.modalContainer}>\n      <form onSubmit={handleSubmit} className={css.contactForm}>\n        <label className={css.formLabel}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            className={css.formInput}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label className={css.formLabel}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            className={css.formInput}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className={css.formButton}>\n          Add contact\n        </button>\n        <button type=\"button\" className={css.formButton} onClick={cancelForm}>\n          Cancel\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"filter_filterLabel__3HlzA\",\"filterInput\":\"filter_filterInput__Hvnfk\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport css from './filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilterChange = filter => dispatch(setFilter(filter));\n\n  return (\n    <label className={css.filterLabel}>\n      Find contact by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        onChange={e => handleFilterChange(e.target.value)}\n        value={filter}\n        className={css.filterInput}\n      />\n    </label>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"modalContainer\":\"editwindow_modalContainer__YiyL3\",\"editWindow\":\"editwindow_editWindow__2MhQU\",\"formLabel\":\"editwindow_formLabel__FvQyP\",\"formInput\":\"editwindow_formInput__DE4hY\",\"formButton\":\"editwindow_formButton__LlBX6\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { editContact } from 'redux/contacts/operations';\nimport {\n  selectIdToEdit,\n  selectNameToEdit,\n  selectNumberToEdit,\n} from 'redux/contacts/selectors';\nimport { setEdit } from 'redux/contacts/editSlice';\nimport css from './editwindow.module.css';\n\nexport const EditWindow = () => {\n  const dispatch = useDispatch();\n  const id = useSelector(selectIdToEdit);\n  const nameToEdit = useSelector(selectNameToEdit);\n  const numberToEdit = useSelector(selectNumberToEdit);\n  const bodyEl = document.querySelector('body');\n  bodyEl.style.overflow = 'hidden';\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const editContactForm = e.currentTarget;\n    const name = editContactForm.elements.name.value;\n    const number = editContactForm.elements.number.value;\n\n    const contact = { name, number };\n\n    dispatch(editContact({ id, contact }));\n    dispatch(setEdit({ status: false, id: null, name: null, number: null }));\n    bodyEl.style.overflow = 'auto';\n  };\n\n  const handleNameChange = e => {\n    dispatch(\n      setEdit({\n        status: true,\n        id,\n        name: e.target.value,\n        number: numberToEdit,\n      })\n    );\n  };\n\n  const handleNumberChange = e => {\n    dispatch(\n      setEdit({\n        status: true,\n        id,\n        name: nameToEdit,\n        number: e.target.value,\n      })\n    );\n  };\n\n  const cancelEditing = () => {\n    dispatch(setEdit({ status: false, id: null, name: null, number: null }));\n    bodyEl.style.overflow = 'auto';\n  };\n\n  return (\n    <div className={css.modalContainer}>\n      <form onSubmit={handleSubmit} className={css.editWindow}>\n        <label className={css.formLabel}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            className={css.formInput}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            value={nameToEdit}\n            onChange={e => handleNameChange(e)}\n            required\n          />\n        </label>\n        <label className={css.formLabel}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            className={css.formInput}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            value={numberToEdit}\n            onChange={e => handleNumberChange(e)}\n            required\n          />\n        </label>\n        <button type=\"submit\" className={css.formButton}>\n          Edit contact\n        </button>\n        <button\n          type=\"button\"\n          className={css.formButton}\n          onClick={cancelEditing}\n        >\n          Cancel\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"contactlist_contactList__bTbJl\",\"contactItem\":\"contactlist_contactItem__VzkqN\",\"text\":\"contactlist_text__yTqhi\",\"formBtn\":\"contactlist_formBtn__DmZ1U\"};","import { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectFilteredContacts,\n  selectEditStatus,\n} from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { setEdit } from 'redux/contacts/editSlice';\nimport { EditWindow } from 'components/editwindow';\nimport css from './contactlist.module.css';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const isEditing = useSelector(selectEditStatus);\n\n  const handleDelete = id => dispatch(deleteContact(id));\n  const handleEdit = (id, name, number) => {\n    const status = true;\n    dispatch(setEdit({ status, id, name, number }));\n  };\n\n  return (\n    <>\n      {isEditing && <EditWindow />}\n      <ul className={css.contactList}>\n        {filteredContacts.map(({ id, name, number }) => (\n          <li key={id} className={css.contactItem}>\n            <div className={css.text}>\n              <span>😊 </span>\n              {name}\n            </div>\n            <div className={css.text}>\n              <span>📞 </span>\n              {number}\n            </div>\n            <div>\n              <button\n                onClick={() => handleEdit(id, name, number)}\n                type=\"button\"\n                className={css.formBtn}\n              >\n                Edit\n              </button>\n              <button\n                onClick={() => handleDelete(id)}\n                type=\"button\"\n                className={css.formBtn}\n              >\n                Remove\n              </button>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"contacts_container__+V9So\",\"header\":\"contacts_header__cOk+w\",\"centred\":\"contacts_centred__XYHEu\",\"contactsBox\":\"contacts_contactsBox__pe4Z8 contacts_centred__XYHEu\",\"formButton\":\"contacts_formButton__hTBGx\",\"addContactBtn\":\"contacts_addContactBtn__EaCJi contacts_formButton__hTBGx\"};","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n  selectShowContactForm,\n} from 'redux/contacts/selectors';\nimport { setShowContactForm } from 'redux/contacts/showContactFormSlice';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactForm } from 'components';\nimport { Filter } from 'components';\nimport { Blocks } from 'react-loader-spinner';\nimport { ContactList } from 'components';\nimport css from './contacts.module.css';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const showContactsForm = useSelector(selectShowContactForm);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const show = () => {\n    dispatch(setShowContactForm(!showContactsForm));\n  };\n\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>PhoneBook - Contacts</title>\n      </Helmet>\n      <div className={css.container}>\n        <h2 className={css.header}>Contacts</h2>\n        <div className={css.contactsBox}>\n          <button type=\"button\" onClick={show} className={css.addContactBtn}>\n            Add contact\n          </button>\n          {showContactsForm && <ContactForm />}\n          <Filter />\n          {isLoading && (\n            <div className={css.centred}>\n              <Blocks />\n            </div>\n          )}\n          {error && (\n            <div className={css.centred}>\n              <b>{error}</b>\n            </div>\n          )}\n          {contacts && <ContactList />}\n        </div>\n      </div>\n    </HelmetProvider>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectEditStatus","edit","status","selectIdToEdit","idToEdit","selectNameToEdit","nameToEdit","selectNumberToEdit","numberToEdit","selectShowContactForm","showContactForm","selectFilteredContacts","createSelector","contact","name","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","showContactsForm","bodyEl","document","querySelector","style","overflow","className","css","onSubmit","e","preventDefault","addContactForm","currentTarget","newContact","elements","value","number","find","reset","Notify","addContact","setShowContactForm","type","pattern","title","required","onClick","Filter","onChange","setFilter","handleFilterChange","target","EditWindow","id","editContactForm","editContact","setEdit","handleNameChange","handleNumberChange","ContactList","filteredContacts","isEditing","map","handleEdit","deleteContact","handleDelete","useEffect","fetchContacts"],"sourceRoot":""}