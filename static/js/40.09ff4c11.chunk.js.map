{"version":3,"file":"static/js/40.09ff4c11.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","webpack://react-homework-template/./src/components/contactform/contactform.module.css?100c","components/contactform/ContactForm.jsx","webpack://react-homework-template/./src/components/filter/filter.module.css?56b3","components/filter/Filter.jsx","webpack://react-homework-template/./src/components/editwindow/editwindow.module.css?d168","components/editwindow/EditWindow.jsx","webpack://react-homework-template/./src/components/contactlist/contactlist.module.css?44d9","components/contactlist/ContactList.jsx","webpack://react-homework-template/./src/pages/Contacts/contacts.module.css?eff6","pages/Contacts/Contacts.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectEditStatus = state => state.edit.status;\n\nexport const selectIdToEdit = state => state.edit.idToEdit;\n\nexport const selectNameToEdit = state => state.edit.nameToEdit;\n\nexport const selectNumberToEdit = state => state.edit.numberToEdit;\n\nexport const selectShowContactForm = state => state.showContactForm;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"contactform_contactForm__xR8rX\",\"formLabel\":\"contactform_formLabel__zY7ti\",\"formInput\":\"contactform_formInput__vRCgK\",\"formButton\":\"contactform_formButton__MR-Xo\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectShowContactForm,\n} from 'redux/contacts/selectors';\nimport { setShowContactForm } from 'redux/contacts/showContactFormSlice';\nimport css from './contactform.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const showContactsForm = useSelector(selectShowContactForm);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const addContactForm = e.currentTarget;\n    const name = addContactForm.elements.name.value;\n    const number = addContactForm.elements.number.value;\n\n    const newContact = { name, number };\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n      )\n    ) {\n      addContactForm.reset();\n      return alert(`${newContact.name} is already in contacts!`);\n    }\n\n    dispatch(addContact(newContact));\n    addContactForm.reset();\n  };\n\n  const cancelForm = () => {\n    dispatch(setShowContactForm(!showContactsForm));\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.contactForm}>\n      <label className={css.formLabel}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          className={css.formInput}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.formLabel}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          className={css.formInput}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={css.formButton}>\n        Add contact\n      </button>\n      <button type=\"button\" className={css.formButton} onClick={cancelForm}>\n        Cancel\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"filter_filterLabel__3HlzA\",\"filterInput\":\"filter_filterInput__Hvnfk\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport css from './filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilterChange = filter => dispatch(setFilter(filter));\n\n  return (\n    <label className={css.filterLabel}>\n      Find contact by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        onChange={e => handleFilterChange(e.target.value)}\n        value={filter}\n        className={css.filterInput}\n      />\n    </label>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"editWindow\":\"editwindow_editWindow__2MhQU\",\"formLabel\":\"editwindow_formLabel__FvQyP\",\"formInput\":\"editwindow_formInput__DE4hY\",\"formButton\":\"editwindow_formButton__LlBX6\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { editContact } from 'redux/contacts/operations';\nimport {\n  selectIdToEdit,\n  selectNameToEdit,\n  selectNumberToEdit,\n} from 'redux/contacts/selectors';\nimport { setEdit } from 'redux/contacts/editSlice';\nimport css from './editwindow.module.css';\n\nexport const EditWindow = () => {\n  const dispatch = useDispatch();\n  const id = useSelector(selectIdToEdit);\n  const nameToEdit = useSelector(selectNameToEdit);\n  const numberToEdit = useSelector(selectNumberToEdit);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const editContactForm = e.currentTarget;\n    const name = editContactForm.elements.name.value;\n    const number = editContactForm.elements.number.value;\n\n    const contact = { name, number };\n\n    dispatch(editContact({ id, contact }));\n    dispatch(setEdit({ status: false, id: null, name: null, number: null }));\n  };\n\n  const handleNameChange = e => {\n    dispatch(\n      setEdit({\n        status: true,\n        id,\n        name: e.target.value,\n        number: numberToEdit,\n      })\n    );\n  };\n\n  const handleNumberChange = e => {\n    dispatch(\n      setEdit({\n        status: true,\n        id,\n        name: nameToEdit,\n        number: e.target.value,\n      })\n    );\n  };\n\n  const cancelEditing = () => {\n    dispatch(setEdit({ status: false, id: null, name: null, number: null }));\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.editWindow}>\n      <label className={css.formLabel}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          className={css.formInput}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={nameToEdit}\n          onChange={e => handleNameChange(e)}\n          required\n        />\n      </label>\n      <label className={css.formLabel}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          className={css.formInput}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          value={numberToEdit}\n          onChange={e => handleNumberChange(e)}\n          required\n        />\n      </label>\n      <button type=\"submit\" className={css.formButton}>\n        Edit contact\n      </button>\n      <button type=\"button\" className={css.formButton} onClick={cancelEditing}>\n        Cancel\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"contactlist_contactItem__VzkqN\",\"formBtn\":\"contactlist_formBtn__DmZ1U\"};","import { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectFilteredContacts,\n  selectEditStatus,\n} from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { setEdit } from 'redux/contacts/editSlice';\nimport { EditWindow } from 'components/editwindow';\nimport css from './contactlist.module.css';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const isEditing = useSelector(selectEditStatus);\n\n  const handleDelete = id => dispatch(deleteContact(id));\n  const handleEdit = (id, name, number) => {\n    const status = true;\n    dispatch(setEdit({ status, id, name, number }));\n  };\n\n  return (\n    <>\n      {isEditing && <EditWindow />}\n      <ul>\n        {filteredContacts.map(({ id, name, number }) => (\n          <li key={id} className={css.contactItem}>\n            {name}: {number}\n            <button\n              onClick={() => handleEdit(id, name, number)}\n              type=\"button\"\n              className={css.formBtn}\n            >\n              Edit\n            </button>\n            <button\n              onClick={() => handleDelete(id)}\n              type=\"button\"\n              className={css.formBtn}\n            >\n              Remove\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"contacts_container__+V9So\",\"header\":\"contacts_header__cOk+w\",\"contactsBox\":\"contacts_contactsBox__pe4Z8\",\"centred\":\"contacts_centred__XYHEu\",\"formButton\":\"contacts_formButton__hTBGx\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n  selectShowContactForm,\n} from 'redux/contacts/selectors';\nimport { setShowContactForm } from 'redux/contacts/showContactFormSlice';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactForm } from 'components';\nimport { Filter } from 'components';\nimport { Blocks } from 'react-loader-spinner';\nimport { ContactList } from 'components';\nimport css from './contacts.module.css';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const showContactsForm = useSelector(selectShowContactForm);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const show = () => {\n    dispatch(setShowContactForm(!showContactsForm));\n  };\n\n  return (\n    <div className={css.container}>\n      <h2 className={css.header}>Contacts</h2>\n      <div className={css.contactsBox}>\n        <button type=\"button\" onClick={show} className={css.formButton}>\n          Add contact\n        </button>\n        {showContactsForm && <ContactForm />}\n        <Filter />\n        {isLoading && (\n          <div className={css.centred}>\n            <Blocks />\n          </div>\n        )}\n        {error && (\n          <div className={css.centred}>\n            <b>{error}</b>\n          </div>\n        )}\n        {contacts && <ContactList />}\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectEditStatus","edit","status","selectIdToEdit","idToEdit","selectNameToEdit","nameToEdit","selectNumberToEdit","numberToEdit","selectShowContactForm","showContactForm","selectFilteredContacts","contact","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","showContactsForm","onSubmit","e","preventDefault","addContactForm","currentTarget","newContact","elements","number","reset","alert","addContact","className","css","type","pattern","title","required","onClick","setShowContactForm","Filter","onChange","setFilter","handleFilterChange","target","EditWindow","id","editContactForm","editContact","setEdit","handleNameChange","handleNumberChange","ContactList","filteredContacts","isEditing","handleEdit","deleteContact","handleDelete","useEffect","fetchContacts"],"sourceRoot":""}